# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DB_USER: postgres
  DB_NAME: jpalibrarymanager

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-run:
    runs-on: ubuntu-latest
#
#    services:
#      # Label used to access the service container
#      mssql:
#        # Docker Hub image
#        image: postgres:alpine
#        # Provide the password for postgres
#        env:
#          POSTGRES_USER: ${{ env.DB_USER }}
#          POSTGRES_PASS: ${{ secrets.CI_POSTGRES_PASSWORD }}
#          POSTGRES_DB: ${{ env.DB_NAME }}
#        ports:
#          - 5432:5432
 
 
 
    steps:
      - uses: actions/checkout@v2


      - name: Setup PostgreSQL DB on runner
        # You may pin to the exact commit or the version.
        # uses: Harmon758/postgresql-action@0be19fa37850b22cb4c9bbf28a03abbf44abd863
        uses: Harmon758/postgresql-action@v1.0.0
        with:
          # Version of PostgreSQL to use
          postgresql version: alpine
          # POSTGRES_DB - name for the default database that is created
          postgresql db: ${{ env.DB_NAME }} 
          # POSTGRES_USER - create the specified user with superuser power
          postgresql user: ${{ env.DB_USER }} 
          # POSTGRES_PASSWORD - superuser password
          postgresql password: ${{ secrets.CI_POSTGRES_PASSWORD }} 





      - name: Clean compile and run tests
        run: sudo mvn clean package
